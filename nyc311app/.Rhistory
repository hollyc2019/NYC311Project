w = table(df$Complaint.Type)
t = as.data.frame(w)
names(t)[1] = 'Complaint.Type'
ct <- head(t[order(t$Freq, decreasing = TRUE),c(1,2)], 15)$Complaint.Type
df_complaints <- df[df$Complaint.Type %in% ct,]
df_complaints$Complaint.Date <- as.Date(as.POSIXct(df_complaints$Created.Date, format="%m/%d/%Y"))
df_complaints$Complaint.Hour <- hour(as.POSIXct(df_complaints$Created.Date, format="%m/%d/%Y %I:%M:%S %p"))
df_borough <- df_complaints[,c("Borough","Complaint.Hour")]
df_borough <- dcast(df_borough, Borough~Complaint.Hour)
library(dplyr)
library(lubridate)
library(GGally)
library(reshape2)
# load data
df <- read.csv("data/311_feb.csv")
# get top 15 complaints
w = table(df$Complaint.Type)
t = as.data.frame(w)
names(t)[1] = 'Complaint.Type'
ct <- head(t[order(t$Freq, decreasing = TRUE),c(1,2)], 15)$Complaint.Type
df_complaints <- df[df$Complaint.Type %in% ct,]
df_complaints$Complaint.Date <- as.Date(as.POSIXct(df_complaints$Created.Date, format="%m/%d/%Y"))
df_complaints$Complaint.Hour <- hour(as.POSIXct(df_complaints$Created.Date, format="%m/%d/%Y %I:%M:%S %p"))
df_borough <- df_complaints[,c("Borough","Complaint.Hour")]
df_borough <- dcast(df_borough, Borough~Complaint.Hour)
write.csv(df_borough, row.names=F, file = "311_borough.csv")
ggparcoord(df_borough, columns = 2:25, groupColumn = "Borough", scale = "globalminmax")
shiny::runApp('Documents/columbia/NYC311Project/nyc311_shiny')
runApp('Documents/columbia/NYC311Project/nyc311_shiny')
runApp('Documents/columbia/NYC311Project/nyc311_shiny')
runApp('Documents/columbia/NYC311Project/nyc311_shiny')
runApp('Documents/columbia/NYC311Project/nyc311_shiny')
runApp('Documents/columbia/NYC311Project/nyc311_shiny')
runApp('Documents/columbia/NYC311Project/nyc311_shiny')
runApp('Documents/columbia/NYC311Project/nyc311_shiny')
runApp('Documents/columbia/NYC311Project/nyc311_shiny')
runApp('Documents/columbia/NYC311Project/nyc311_shiny')
runApp('Documents/columbia/NYC311Project/nyc311_shiny')
runApp('Documents/columbia/NYC311Project/nyc311_shiny')
install.packages("shinydashboard")
runApp('Documents/columbia/NYC311Project/nyc311_shiny')
runApp('Documents/columbia/NYC311Project/nyc311_shiny')
runApp('Documents/columbia/NYC311Project/nyc311_shiny')
runApp('Documents/columbia/NYC311Project/nyc311_shiny')
runApp('Documents/columbia/NYC311Project/nyc311_shiny')
runApp('Documents/columbia/NYC311Project/nyc311_shiny')
runApp('Documents/columbia/NYC311Project/nyc311_shiny')
runApp('Documents/columbia/NYC311Project/nyc311_shiny')
runApp('Documents/columbia/NYC311Project/nyc311_shiny')
runApp('Documents/columbia/NYC311Project/nyc311_shiny')
rsconnect::deployApp('/Users/olehdubno/Documents/columbia/NYC311Project/nyc311_shiny')
runApp('Documents/columbia/NYC311Project/nyc311_shiny')
rsconnect::deployApp('/Users/olehdubno/Documents/columbia/NYC311Project/nyc311_shiny')
runApp('Documents/columbia/NYC311Project/nyc311_shiny')
rsconnect::deployApp('/Users/olehdubno/Documents/columbia/NYC311Project/nyc311_shiny')
library(ggplot2)
library(ggmap)
df <- read.csv("data/311_feb.csv")
df_lat_lon <- data.frame(lon=df$Longitude, lat=df$Latitude)
coord <- data.frame(lon = -74.00594, lat = 40.71278)
map.NY12 <- get_map(location=c(lon=coord$lon,lat=coord$lat+0.02),zoom=11, source = "stamen", maptype = "toner-lite")
ggmap(map.NY12, extent = "device") +
stat_density2d(data = df_lat_lon,
aes(x = lon, y = lat, fill = ..level.., alpha = ..level..), size = 0.1,
bins = 100, geom = "polygon") +
geom_density2d(data = df_lat_lon, aes(x = lon, y = lat), size = 0.1, alpha = 0.8) +
scale_fill_gradient(low = "green", high = "red") +
scale_alpha(range = c(0.1, 0.4), guide = FALSE)
shiny::runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
rsconnect::deployApp('/Users/olehdubno/Documents/columbia/NYC311Project/nyc311app')
df <- read.csv("data/311_feb.csv")
ny_plot=ggmap(get_map('New York, New York',zoom=12, maptype='terrain'))
library(ggmap)
libary(ggplot2)
library(ggplot2)
library(ggmap)
ny_plot=ggmap(get_map('New York, New York',zoom=12, maptype='terrain'))
ny_plot +
stat_density2d(data= df, aes(x = df$lon, y = df$lat, alpha=.75,fill=..level..),bins = 10, geom = 'polygon')
ny_plot <- ggmap(get_map('New York, New York',zoom=12, maptype='terrain'))
ny_plot
get_map('New York, New York', zoom=12, maptype='terrain')
get_map(location = "New York", maptype = "roadmap")
get_map(location = "New York, New York", maptype = "roadmap")
get_map(location = "New York, New York", maptype = "terrain")
get_map(location = "New York City, New York", maptype = "terrain")
get_map('New York, New York', zoom=12, maptype='terrain')
library(ggplot2)
library(ggmap)
get_map('New York, New York', zoom=12, maptype='terrain')
ggmap(get_map('New York, New York', zoom=12, maptype='terrain'))
ggmap(get_map('New York City, New York', zoom=12, maptype='terrain'))
ggmap(get_map('New York City', zoom=12, maptype='terrain'))
ggmap(get_map('New York City', zoom=10, maptype='terrain'))
ggmap(get_map('New York City', zoom=11, maptype='terrain'))
ny_plot <- ggmap(get_map('New York City', zoom=11, maptype='terrain'))
ny_plot +
stat_density2d(data= df, aes(x = df$lon, y = df$lat, alpha=.75,fill=..level..),bins = 10, geom = 'polygon')
df$lon
ny_plot +
stat_density2d(df, aes(x = df$Longitude, y = df$Latitude, alpha=.75,fill=..level..),bins = 10, geom = 'polygon')
df$Latitude
df$Longitude
ny_plot +
stat_density2d(df, aes(x = df$Longitude, y = df$Latitude, alpha=.75,fill=..level..),bins = 10, geom = 'polygon')
ny_plot +
stat_density2d(data=df, aes(x = df$Longitude, y = df$Latitude, alpha=.75,fill=..level..),bins = 10, geom = 'polygon')
ny_plot +
stat_density2d(data=df, aes(x = df$Longitude, y = df$Latitude, alpha=.75,fill=..level..), bins = 10, geom = 'polygon') +
title("Hello")
ny_plot +
stat_density2d(data=df, aes(x = df$Longitude, y = df$Latitude, alpha=.75,fill=..level..), bins = 10, geom = 'polygon') +
guides(fill = guide_colorbar(barwidth = 1, barheight = 12)) +
scale_alpha(guide = FALSE)+
xlab(' ')+ylab(' ')+
ggtitle('Vehicle Accidents - NYC - 2013')
ny_plot +
stat_density2d(data=df, aes(x = df$Longitude, y = df$Latitude, alpha=.75,fill=..level..), bins = 10, geom = 'polygon') +
guides(fill = guide_colorbar(barwidth = 1, barheight = 12)) +
scale_alpha(guide = FALSE)+
xlab('') +
ylab('') +
ggtitle('Where Do The Complaints Occur') +
ggsubtitle('stuff')
ny_plot +
stat_density2d(data=df, aes(x = df$Longitude, y = df$Latitude, alpha=.75,fill=..level..), bins = 10, geom = 'polygon') +
guides(fill = guide_colorbar(barwidth = 1, barheight = 12)) +
scale_alpha(guide = FALSE)+
xlab('') +
ylab('') +
ggtitle('Where Do The Complaints Occur')
stat_density2d(data=df, aes(x = df$Longitude, y = df$Latitude, alpha=.75,fill=..level..), bins = 10, geom = 'polygon')
guides(fill = guide_colorbar(barwidth = 1, barheight = 12)) +
scale_alpha(guide = FALSE)
ny_plot <- ggmap(get_map('New York City', zoom=11, maptype='terrain'))
ny_stat_density <- stat_density2d(data=df, aes(x = df$Longitude, y = df$Latitude, alpha=.75,fill=..level..), bins = 10, geom = 'polygon')
ny_plot +
ny_stat_density +
guides(fill = guide_colorbar(barwidth = 1, barheight = 12)) +
scale_alpha(guide = FALSE)+
xlab('') +
ylab('') +
ggtitle('Where Do The Complaints Occur')
ny_plot <- ggmap(get_map('New York City', zoom=11, maptype='terrain'))
ny_stat_density <- stat_density2d(data=df, aes(x = df$Longitude, y = df$Latitude, alpha=.6, position = "identity", fill=..level..), bins = 10, geom = 'polygon', na.rm=TRUE)
ny_plot +
ny_stat_density +
guides(fill = guide_colorbar(barwidth = 1, barheight = 12)) +
scale_alpha(guide = FALSE)+
xlab('') +
ylab('') +
ggtitle('Where Do The Complaints Occur')
ny_plot <- ggmap(get_map('New York City', zoom=11, maptype='terrain'))
ny_stat_density <- stat_density2d(data=df, aes(x = df$Longitude, y = df$Latitude, alpha=.6, fill=..level..), bins = 10, geom = 'polygon', na.rm=TRUE, position = "identity")
ny_plot +
ny_stat_density +
guides(fill = guide_colorbar(barwidth = 1, barheight = 12)) +
scale_alpha(guide = FALSE)+
xlab('') +
ylab('') +
ggtitle('Where Do The Complaints Occur')
ny_plot <- ggmap(get_map('New York City', zoom=11, maptype='terrain'))
ny_stat_density <- stat_density2d(data=df, aes(x = df$Longitude, y = df$Latitude, alpha=.6, na.rm=TRUE, position = "identity")
ny_plot <- ggmap(get_map('New York City', zoom=11, maptype='terrain'))
ny_stat_density <- stat_density2d(data=df, aes(x = df$Longitude, y = df$Latitude, alpha=.6, na.rm=TRUE, position = "identity"))
ny_plot +
ny_stat_density +
guides(fill = guide_colorbar(barwidth = 1, barheight = 12)) +
geom_hex(stat = "identity") +
scale_alpha(guide = FALSE) +
xlab('') +
ylab('') +
ggtitle('Where Do The Complaints Occur')
ny_plot +
ny_stat_density +
guides(fill = guide_colorbar(barwidth = 1, barheight = 12)) +
scale_alpha(guide = FALSE) +
xlab('') +
ylab('') +
ggtitle('Where Do The Complaints Occur')
ny_plot <- ggmap(get_map('New York City', zoom=11, maptype='terrain'))
ny_stat_density <- stat_density2d(data=df, aes(x = df$Longitude, y = df$Latitude, alpha=.6, fill=..level..), bins = 10, geom = 'polygon', na.rm=TRUE)
ny_plot <- ggmap(get_map('New York City', zoom=11, maptype='terrain'))
ny_plot +
ny_stat_density +
guides(fill = guide_colorbar(barwidth = 1, barheight = 12)) +
scale_alpha(range = c(0, 0.3), guide = FALSE)+
xlab('') +
ylab('') +
ggtitle('Where Do The Complaints Occur')
ny_plot +
ny_stat_density +
# guides(fill = guide_colorbar(barwidth = 1, barheight = 12)) +
scale_fill_gradient(low = "green", high = "red")
ny_plot +
ny_stat_density +
# guides(fill = guide_colorbar(barwidth = 1, barheight = 12)) +
scale_fill_gradient(low = "green", high = "red") +
scale_alpha(range = c(0, 0.3), guide = FALSE)+
xlab('') +
ylab('') +
ggtitle('Where Do The Complaints Occur')
ny_plot +
ny_stat_density +
# guides(fill = guide_colorbar(barwidth = 1, barheight = 12)) +
scale_fill_gradient(low = "green", high = "red") +
scale_alpha(range = c(0, 0.3), guide = FALSE)+
xlab('') +
ylab('') +
ggtitle('Where Do The Complaints Occur')
ny_plot <- ggmap(get_map('New York City', zoom=11, maptype='terrain'))
ny_stat_density <- stat_density2d(data=df, aes(x = df$Longitude, y = df$Latitude, alpha=.6, fill=..level..), bins = 10, geom = 'polygon', na.rm=TRUE)
ny_plot +
ny_stat_density +
guides(fill = guide_colorbar(barwidth = 1, barheight = 12)) +
scale_fill_gradient(low = "green", high = "red") +
scale_alpha(range = c(0, 0.3), guide = FALSE)+
xlab('') +
ylab('') +
ggtitle('Where Do The Complaints Occur')
ny_plot +
ny_stat_density +
guides(fill = guide_colorbar(barwidth = 1, barheight = 12)) +
scale_fill_gradient(low = "green", high = "red") +
# scale_alpha(range = c(0, 0.3), guide = FALSE)+
xlab('') +
ylab('') +
ggtitle('Where Do The Complaints Occur')
ny_plot +
ny_stat_density +
guides(fill = guide_colorbar(barwidth = 1, barheight = 12)) +
scale_fill_gradient(low = "green", high = "red") +
scale_alpha(range = c(0, 0.5), guide = FALSE)+
xlab('') +
ylab('') +
ggtitle('Where Do The Complaints Occur')
ny_plot +
ny_stat_density +
guides(fill = guide_colorbar(barwidth = 1, barheight = 12)) +
scale_fill_gradient(low = "green", high = "red") +
scale_alpha(range = c(0, 0.5), guide = FALSE) +
xlab('') +
ylab('') +
ggtitle(expression(atop("Where Do The Complaints Occur",
atop(italic("Some crucial note that has to be here"), "")))) +
ny_plot +
ny_stat_density +
guides(fill = guide_colorbar(barwidth = 1, barheight = 12)) +
scale_fill_gradient(low = "green", high = "red") +
scale_alpha(range = c(0, 0.5), guide = FALSE) +
xlab('') +
ylab('') +
ggtitle(expression(atop("Test 1 "))) +
# expression(atop("Where Do The Complaints Occur",
#                         atop(italic("Some crucial note that has to be here"), "")))
ny_plot +
ny_stat_density +
guides(fill = guide_colorbar(barwidth = 1, barheight = 12)) +
scale_fill_gradient(low = "green", high = "red") +
scale_alpha(range = c(0, 0.5), guide = FALSE) +
xlab('') +
ylab('') +
ggtitle(bquote(atop(.(plot.title), atop(italic(.(plot.subtitle)), "")))) +
# expression(atop("Where Do The Complaints Occur",
#                         atop(italic("Some crucial note that has to be here"), "")))
ny_plot +
ny_stat_density +
guides(fill = guide_colorbar(barwidth = 1, barheight = 12)) +
scale_fill_gradient(low = "green", high = "red") +
scale_alpha(range = c(0, 0.5), guide = FALSE) +
xlab('') +
ylab('') +
labs(title = plot.title,subtitle = plot.subtitle) +
# expression(atop("Where Do The Complaints Occur",
#                         atop(italic("Some crucial note that has to be here"), "")))
ny_plot +
ny_stat_density +
guides(fill = guide_colorbar(barwidth = 1, barheight = 12)) +
scale_fill_gradient(low = "green", high = "red") +
scale_alpha(range = c(0, 0.5), guide = FALSE) +
xlab('') +
ylab('') +
ggtitle(expression(paste("(B) Coefficients of the crude model vs the total 25(OH)", D[3]," adjusted model (0h vs 6h)", sep=""))) +
# expression(atop("Where Do The Complaints Occur",
#                         atop(italic("Some crucial note that has to be here"), "")))
ny_plot +
ny_stat_density +
guides(fill = guide_colorbar(barwidth = 1, barheight = 12)) +
scale_fill_gradient(low = "green", high = "red") +
scale_alpha(range = c(0, 0.5), guide = FALSE) +
xlab('') +
ylab('') +
ylab(bquote("Coefficients of the total 25(OH)D"[3]~"adjusted model")) +
theme_bw(base_size = 17) + theme(
panel.grid.major = element_line(color = "gray20", size = 0.3, linetype = "dashed"),
panel.grid.minor = element_line(color = "gray40", size = 0.3, linetype = "dashed")
) + ggtitle(expression(atop("(B) Coefficients of the crude model vs", "the total 25(OH)" ~ D[3] ~ "adjusted model (0h vs 6h)"))) +
theme(plot.margin=unit(c(4,0,0,0),"cm"))
# expression(atop("Where Do The Complaints Occur",
#                         atop(italic("Some crucial note that has to be here"), "")))
ny_plot +
ny_stat_density +
guides(fill = guide_colorbar(barwidth = 1, barheight = 12)) +
scale_fill_gradient(low = "green", high = "red") +
scale_alpha(range = c(0, 0.5), guide = FALSE) +
xlab('') +
ylab('') +
ylab(bquote("Coefficients of the total 25(OH)D"[3]~"adjusted model")) +
theme_bw(base_size = 17) + theme(
panel.grid.major = element_line(color = "gray20", size = 0.3, linetype = "dashed"),
panel.grid.minor = element_line(color = "gray40", size = 0.3, linetype = "dashed")
) + ggtitle(expression(atop("WT by AM                            ",
atop(italic("Some crucial note that has to be here"), "")))) +
theme(plot.margin=unit(c(4,0,0,0),"cm"))
# expression(atop("Where Do The Complaints Occur",
#                         atop(italic("Some crucial note that has to be here"), "")))
ny_plot +
ny_stat_density +
guides(fill = guide_colorbar(barwidth = 1, barheight = 12)) +
scale_fill_gradient(low = "green", high = "red") +
scale_alpha(range = c(0, 0.5), guide = FALSE) +
xlab('') +
ylab('') +
theme_bw(base_size = 17) + theme(
panel.grid.major = element_line(color = "gray20", size = 0.3, linetype = "dashed"),
panel.grid.minor = element_line(color = "gray40", size = 0.3, linetype = "dashed")
) + ggtitle(expression(atop("WT by AM                            ",
atop(italic("Some crucial note that has to be here"), "")))) +
theme(plot.margin=unit(c(4,0,0,0),"cm"))
# expression(atop("Where Do The Complaints Occur",
#                         atop(italic("Some crucial note that has to be here"), "")))
ny_plot +
ny_stat_density +
guides(fill = guide_colorbar(barwidth = 1, barheight = 12)) +
scale_fill_gradient(low = "green", high = "red") +
scale_alpha(range = c(0, 0.5), guide = FALSE) +
xlab('') +
ylab('') +
theme_bw(base_size = 17) + theme(
panel.grid.major = element_line(color = "gray20", size = 0.3, linetype = "dashed"),
panel.grid.minor = element_line(color = "gray40", size = 0.3, linetype = "dashed")
) + ggtitle(expression(atop("WT by AM                            ",
atop(italic("Some crucial note that has to be here"), ""))))
# expression(atop("Where Do The Complaints Occur",
#                         atop(italic("Some crucial note that has to be here"), "")))
ny_plot +
ny_stat_density +
guides(fill = guide_colorbar(barwidth = 1, barheight = 12)) +
scale_fill_gradient(low = "green", high = "red") +
scale_alpha(range = c(0, 0.5), guide = FALSE) +
xlab('') +
ylab('') +
theme_bw(base_size = 17) + ggtitle(expression(atop("WT by AM                            ",
atop(italic("Some crucial note that has to be here"), ""))))
# expression(atop("Where Do The Complaints Occur",
#                         atop(italic("Some crucial note that has to be here"), "")))
ny_plot +
ny_stat_density +
guides(fill = guide_colorbar(barwidth = 1, barheight = 12)) +
scale_fill_gradient(low = "green", high = "red") +
scale_alpha(range = c(0, 0.5), guide = FALSE) +
xlab('') +
ylab('') +
theme_bw() +
ggtitle(expression(atop("Where Do The Complaints Occur", atop(italic("Some crucial note that has to be here"), ""))))
# expression(atop("Where Do The Complaints Occur",
#                         atop(italic("Some crucial note that has to be here"), "")))
ny_plot +
ny_stat_density +
guides(fill = guide_colorbar(barwidth = 1, barheight = 12)) +
scale_fill_gradient(low = "green", high = "red") +
scale_alpha(range = c(0, 0.5), guide = FALSE) +
xlab('') +
ylab('') +
theme_bw() +
ggtitle(
expression(
atop("Where Do The Complaints Occur",
atop("Some crucial note that has to be here", ""))))
# expression(atop("Where Do The Complaints Occur",
#                         atop(italic("Some crucial note that has to be here"), "")))
ny_plot +
ny_stat_density +
guides(fill = guide_colorbar(barwidth = 1, barheight = 12)) +
scale_fill_gradient(low = "green", high = "red") +
scale_alpha(range = c(0, 0.5), guide = FALSE) +
xlab('') +
ylab('') +
theme_bw() +
ggtitle(
expression(
atop("Where Do Complaints Occur",
atop("EXPLORING THE FREQUENCY OF COMPLAINTS GEOGRAPHICALLY", ""))
)
)
# expression(atop("Where Do The Complaints Occur",
#                         atop(italic("Some crucial note that has to be here"), "")))
df[, c("Latitude")]
df[, c("Latitude", "Longitude")]
df_geo_data <- df[, c("Latitude", "Longitude")]
write.csv(df_geo_data, row.names=F, file = "311_geo_data.csv")
shiny::runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
install.packages("shinyIncubator")
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
rsconnect::deployApp('/Users/olehdubno/Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
rsconnect::deployApp('/Users/olehdubno/Documents/columbia/NYC311Project/nyc311app')
rsconnect::deployApp('/Users/olehdubno/Documents/columbia/NYC311Project/nyc311app')
df <- read.csv("data/311_feb.csv", nrow=1000)
head(df)
df$Status
unique(df$Status)
unique(df$Agency)
for (i in unique(df$Agency)){
print(i)
}
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
rsconnect::deployApp('/Users/olehdubno/Documents/columbia/NYC311Project/nyc311app')
library(dplyr)
library(lubridate)
library(GGally)
library(reshape2)
# load data
df <- read.csv("data/311_feb.csv")
# get top 15 complaints
w = table(df$Complaint.Type)
t = as.data.frame(w)
names(t)[1] = 'Complaint.Type'
ct <- head(t[order(t$Freq, decreasing = TRUE),c(1,2)], 15)$Complaint.Type
df_complaints <- df[df$Complaint.Type %in% ct,]
df_complaints$Complaint.Date <- as.Date(as.POSIXct(df_complaints$Created.Date, format="%m/%d/%Y"))
df_complaints$Complaint.Hour <- hour(as.POSIXct(df_complaints$Created.Date, format="%m/%d/%Y %I:%M:%S %p"))
df_borough <- df_complaints[,c("Borough","Complaint.Hour")]
df_borough
df_complaints[,c("Complaint.Type","Complaint.Hour")]
df_complaints <- df_complaints[,c("Complaint.Type","Complaint.Hour")]
df_complaints
dcast(df_complaints, Complaint.Type~Complaint.Hour)
df_complaints <- dcast(df_complaints, Complaint.Type~Complaint.Hour)
df_complaints
ggparcoord(df_by_hour, columns = 2:25, groupColumn = "Complaint.Type", scale = "globalminmax")
ggparcoord(df_complaints, columns = 2:25, groupColumn = "Complaint.Type", scale = "globalminmax")
studentdata[studentdata$Drink %in% c('Blocked Driveway', 'Noise'),]
df_complaints[df_complaints$Complaint.Type %in% c('Blocked Driveway', 'Noise'),]
temp <- df_complaints[df_complaints$Complaint.Type %in% c('Blocked Driveway', 'Noise'),]
ggparcoord(temp, columns = 2:25, groupColumn = "Complaint.Type", scale = "globalminmax")
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
write.csv(df_complaints, row.names=F, file = "311_complaint_times.csv")
df_complaints$Complaint.Type
unique(df_complaints$Complaint.Type)
names(df_complaints$Complaint.Type)
df_complaints$Complaint.Type
"Blocked Driveway" %in% df_complaints$Complaint.Type
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
nrow(df_complaints$Complaint.Type)
rownames(df_complaints$Complaint.Type)
as.list(df_complaints$Complaint.Type)
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
temp <- df_complaints[df_complaints$Complaint.Type %in% df_complaints$Complaint.Type,]
ggparcoord(temp, columns = 2:25, groupColumn = "Complaint.Type", scale = "globalminmax")
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')

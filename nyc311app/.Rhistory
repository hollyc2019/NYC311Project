runApp('Documents/columbia/NYC311Project/nyc311_shiny')
runApp('Documents/columbia/NYC311Project/nyc311_shiny')
runApp('Documents/columbia/NYC311Project/nyc311_shiny')
runApp('Documents/columbia/NYC311Project/nyc311_shiny')
runApp('Documents/columbia/NYC311Project/nyc311_shiny')
runApp('Documents/columbia/NYC311Project/nyc311_shiny')
runApp('Documents/columbia/NYC311Project/nyc311_shiny')
runApp('Documents/columbia/NYC311Project/nyc311_shiny')
runApp('Documents/columbia/NYC311Project/nyc311_shiny')
install.packages("shinydashboard")
runApp('Documents/columbia/NYC311Project/nyc311_shiny')
runApp('Documents/columbia/NYC311Project/nyc311_shiny')
runApp('Documents/columbia/NYC311Project/nyc311_shiny')
runApp('Documents/columbia/NYC311Project/nyc311_shiny')
runApp('Documents/columbia/NYC311Project/nyc311_shiny')
runApp('Documents/columbia/NYC311Project/nyc311_shiny')
runApp('Documents/columbia/NYC311Project/nyc311_shiny')
runApp('Documents/columbia/NYC311Project/nyc311_shiny')
runApp('Documents/columbia/NYC311Project/nyc311_shiny')
runApp('Documents/columbia/NYC311Project/nyc311_shiny')
rsconnect::deployApp('/Users/olehdubno/Documents/columbia/NYC311Project/nyc311_shiny')
runApp('Documents/columbia/NYC311Project/nyc311_shiny')
rsconnect::deployApp('/Users/olehdubno/Documents/columbia/NYC311Project/nyc311_shiny')
runApp('Documents/columbia/NYC311Project/nyc311_shiny')
rsconnect::deployApp('/Users/olehdubno/Documents/columbia/NYC311Project/nyc311_shiny')
library(ggplot2)
library(ggmap)
df <- read.csv("data/311_feb.csv")
df_lat_lon <- data.frame(lon=df$Longitude, lat=df$Latitude)
coord <- data.frame(lon = -74.00594, lat = 40.71278)
map.NY12 <- get_map(location=c(lon=coord$lon,lat=coord$lat+0.02),zoom=11, source = "stamen", maptype = "toner-lite")
ggmap(map.NY12, extent = "device") +
stat_density2d(data = df_lat_lon,
aes(x = lon, y = lat, fill = ..level.., alpha = ..level..), size = 0.1,
bins = 100, geom = "polygon") +
geom_density2d(data = df_lat_lon, aes(x = lon, y = lat), size = 0.1, alpha = 0.8) +
scale_fill_gradient(low = "green", high = "red") +
scale_alpha(range = c(0.1, 0.4), guide = FALSE)
shiny::runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
rsconnect::deployApp('/Users/olehdubno/Documents/columbia/NYC311Project/nyc311app')
library(dplyr)
library(lubridate)
library(GGally)
library(reshape2)
# load data
df <- read.csv("data/311_feb.csv")
library(lubridate)
library(dplyr)
library(reshape2)
library(ggplot2)
df <- read.csv("data/311_feb.csv")
w = table(df$Complaint.Type)
t = as.data.frame(w)
names(t)[1] = 'Complaint.Type'
ct <- head(t[order(t$Freq, decreasing = TRUE),c(1,2)], 15)$Complaint.Type
df_filtered <- df[df$Complaint.Type %in% ct,]
df_filtered$Created.Date <- as.POSIXct(df_filtered$Created.Date, format="%m/%d/%Y %I:%M:%S %p")
df_filtered$Closed.Date <- as.POSIXct(df_filtered$Closed.Date, format="%m/%d/%Y %I:%M:%S %p")
df_filtered$Resolution.Minutes <- as.numeric(df_filtered$Closed.Date - df_filtered$Created.Date) / 60
df_select <- df_filtered[,c("Borough","Complaint.Type", "Resolution.Minutes")]
df_select$Borough <- chartr(" ", ".", df_select$Borough) # "Staten Island" should be "Staten.Island"
# write.csv(df_select, row.names=F, file = "311_resolution_time.csv")
df_select
ggplot(df_tally, aes(x=factor(Complaint.Type), y=Resolution.Minutes, fill=Borough)) +
geom_bar(stat='identity', position='dodge') +
coord_flip()
ggplot(df_select, aes(x=factor(Complaint.Type), y=Resolution.Minutes, fill=Borough)) +
geom_bar(stat='identity', position='dodge') +
coord_flip()
df_select %>% group_by(Borough, Complaint.Type) %>% tally()
df_select %>% group_by(Borough, Complaint.Type, Resolution.Minutes) %>% tally()
dcast(df_borough, Borough~Complaint.Hour)
df_select
aggregate(df_select[c("Resolution.Minutes")], list(df_select$Complaint.Type), mean)
aggregate(df_select[c("Borough","Resolution.Minutes")], list(df_select$Complaint.Type), mean)
as.numeric(df_select$Resolution.Minutes)
df_select$Resolution.Minutes <- as.numeric(df_select$Resolution.Minutes)
aggregate(df_select[c("Borough","Resolution.Minutes")], list(df_select$Complaint.Type), mean)
df_select
df_select$Resolution.Minutes <- lapply(df_select$Resolution.Minutes, as.numeric)
df_select
df <- read.csv("data/311_feb.csv")
w = table(df$Complaint.Type)
t = as.data.frame(w)
names(t)[1] = 'Complaint.Type'
ct <- head(t[order(t$Freq, decreasing = TRUE),c(1,2)], 15)$Complaint.Type
df_filtered <- df[df$Complaint.Type %in% ct,]
df_filtered$Created.Date <- as.POSIXct(df_filtered$Created.Date, format="%m/%d/%Y %I:%M:%S %p")
df_filtered$Closed.Date <- as.POSIXct(df_filtered$Closed.Date, format="%m/%d/%Y %I:%M:%S %p")
df_filtered$Resolution.Minutes <- as.numeric(df_filtered$Closed.Date - df_filtered$Created.Date) / 60
df_select <- df_filtered[,c("Borough","Complaint.Type", "Resolution.Minutes")]
df_select$Borough <- chartr(" ", ".", df_select$Borough) # "Staten Island" should be "Staten.Island"
# write.csv(df_select, row.names=F, file = "311_resolution_time.csv")
df_select$Resolution.Minutes <- as.numeric(as.character(df_select$Resolution.Minutes))
df_select
as.numeric(as.character(df_select$Resolution.Minutes))
df_select$Resolution.Minutes2 <- as.numeric(as.character(df_select$Resolution.Minutes))
df_select
example_data <- data.frame(age=c(3,3,3,3,4,4,4,4),
Year=c(2004,2004,2005,2005,2004,2004,2005,2005),
Length=c(23.2,27.6,25.4,22.2,37.6,31.3,29.9,30.1))
example_data
aggregate(x=example_data$Length,
by=list(example_data$age,example_data$Year),
FUN=mean)
aggregate(x=df_select$Resolution.Minutes,
by=list(df_select$Borough,df_select$Complaint.Type),
FUN=mean)
aggregate(x=df_select$Resolution.Minutes,
by=list(df_select$Borough,df_select$Complaint.Type),
FUN=mean)
aggregate(x=df_select$Resolution.Minutes,
by=list(df_select$Borough,df_select$Complaint.Type),
FUN=mean, na.rm=TRUE, na.action=NULL)
df_borough_create_time <- aggregate(x=df_select$Resolution.Minutes,
by=list(df_select$Borough,df_select$Complaint.Type),
FUN=mean, na.rm=TRUE, na.action=NULL)
ggplot(df_borough_create_time, aes(x=factor(Complaint.Type), y=Resolution.Minutes, fill=Borough)) +
geom_bar(stat='identity', position='dodge') +
coord_flip()
df_borough_create_time
names(df_borough_create_time) <- c("Borough", "Complaint.Type", "Mean")
df_borough_create_time
names(df_borough_create_time) <- c("Borough", "Complaint.Type", "Resolution.Mean")
ggplot(df_borough_create_time, aes(x=factor(Complaint.Type), y=Resolution.Mean, fill=Borough)) +
geom_bar(stat='identity', position='dodge') +
coord_flip()
write.csv(df_borough_create_time, row.names=F, file = "311_resolution_time.csv")
shiny::runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
ggplot(df_borough_create_time, aes(x=factor(Complaint.Type), y=Resolution.Mean, fill=Borough)) +
geom_bar(stat='identity', position='dodge') +
coord_flip()
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
df_complaint_type <- read.csv('nyc311app/data/311_borough.csv')
df_complaint_type
runApp('Documents/columbia/NYC311Project/nyc311app')
library(dplyr)
library(lubridate)
library(GGally)
library(reshape2)
# load data
df <- read.csv("data/311_feb.csv")
# get top 15 complaints
w = table(df$Complaint.Type)
t = as.data.frame(w)
names(t)[1] = 'Complaint.Type'
ct <- head(t[order(t$Freq, decreasing = TRUE),c(1,2)], 15)$Complaint.Type
df_complaints <- df[df$Complaint.Type %in% ct,]
df_complaints$Complaint.Date <- as.Date(as.POSIXct(df_complaints$Created.Date, format="%m/%d/%Y"))
df_complaints$Complaint.Hour <- hour(as.POSIXct(df_complaints$Created.Date, format="%m/%d/%Y %I:%M:%S %p"))
df_borough <- df_complaints[,c("Borough","Complaint.Hour")]
df_borough <- dcast(df_borough, Borough~Complaint.Hour)
df_borough$Borough <- chartr(" ", ".", df_tally$Borough) # "Staten Island" should be "Staten.Island"
library(dplyr)
library(lubridate)
library(GGally)
library(reshape2)
# load data
df <- read.csv("data/311_feb.csv")
# get top 15 complaints
w = table(df$Complaint.Type)
t = as.data.frame(w)
names(t)[1] = 'Complaint.Type'
ct <- head(t[order(t$Freq, decreasing = TRUE),c(1,2)], 15)$Complaint.Type
df_complaints <- df[df$Complaint.Type %in% ct,]
df_complaints$Complaint.Date <- as.Date(as.POSIXct(df_complaints$Created.Date, format="%m/%d/%Y"))
df_complaints$Complaint.Hour <- hour(as.POSIXct(df_complaints$Created.Date, format="%m/%d/%Y %I:%M:%S %p"))
df_borough <- df_complaints[,c("Borough","Complaint.Hour")]
df_borough <- dcast(df_borough, Borough~Complaint.Hour)
df_borough$Borough <- chartr(" ", ".", df_borough$Borough) # "Staten Island" should be "Staten.Island"
names(df_borough) <- c("Borough", "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23")
write.csv(df_borough, row.names=F, file = "311_borough_pcp.csv")
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
rsconnect::deployApp('/Users/olehdubno/Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
rsconnect::deployApp('/Users/olehdubno/Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
rsconnect::deployApp('/Users/olehdubno/Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
rsconnect::deployApp('/Users/olehdubno/Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
rsconnect::deployApp('/Users/olehdubno/Documents/columbia/NYC311Project/nyc311app')
library(dplyr)
library(ggplot2)
# load data
df <- read.csv("data/311_feb.csv")
# get top 15 complaints
w = table(df$Complaint.Type)
t = as.data.frame(w)
names(t)[1] = 'Complaint.Type'
ct <- head(t[order(t$Freq, decreasing = TRUE),c(1,2)], 15)$Complaint.Type
df_complaints <- df[df$Complaint.Type %in% ct,]
length(t)
length(t$Complaint.Type)
t$Complaint.Type
t
w
df
df_complaints
191314/119877
119877/191314
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
rsconnect::deployApp('/Users/olehdubno/Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
library(dplyr)
library(lubridate)
library(GGally)
library(reshape2)
# load data
df <- read.csv("data/311_feb.csv")
library(dplyr)
library(lubridate)
library(GGally)
library(reshape2)
# load data
df <- read.csv("../data/311_feb.csv")
# get top 15 complaints
w = table(df$Complaint.Type)
t = as.data.frame(w)
names(t)[1] = 'Complaint.Type'
ct <- head(t[order(t$Freq, decreasing = TRUE),c(1,2)], 15)$Complaint.Type
df_complaints <- df[df$Complaint.Type %in% ct,]
df_complaints$Complaint.Date <- as.Date(as.POSIXct(df_complaints$Created.Date, format="%m/%d/%Y"))
df_complaints$Complaint.Hour <- hour(as.POSIXct(df_complaints$Created.Date, format="%m/%d/%Y %I:%M:%S %p"))
df_complaints_when <- df_complaints[,c("Complaint.Hour","Complaint.Type")]
df_complaints_when <- dcast(df_complaints_when, Complaint.Type~Complaint.Hour)
ggparcoord(df_complaints_when, columns = 2:25, groupColumn = "Complaint.Type", scale = "globalminmax")
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
library(dplyr)
library(lubridate)
library(GGally)
library(reshape2)
# load data
df <- read.csv("../data/311_feb.csv")
# get top 15 complaints
w = table(df$Complaint.Type)
t = as.data.frame(w)
names(t)[1] = 'Complaint.Type'
ct <- head(t[order(t$Freq, decreasing = TRUE),c(1,2)], 15)$Complaint.Type
df_complaints <- df[df$Complaint.Type %in% ct,]
df_complaints$Complaint.Date <- as.Date(as.POSIXct(df_complaints$Created.Date, format="%m/%d/%Y"))
df_complaints$Complaint.Hour <- hour(as.POSIXct(df_complaints$Created.Date, format="%m/%d/%Y %I:%M:%S %p"))
df_complaints_when <- df_complaints[,c("Complaint.Hour","Complaint.Type")]
df_complaints_when <- dcast(df_complaints_when, Complaint.Type~Complaint.Hour)
df_complaints_when
ggparcoord(df_complaints_when, columns = 2:25, groupColumn = "Complaint.Type", scale = "globalminmax")
# get top 15 complaints
w = table(df$Complaint.Type)
t = as.data.frame(w)
names(t)[1] = 'Complaint.Type'
ct <- head(t[order(t$Freq, decreasing = TRUE),c(1,2)], 15)$Complaint.Type
df_complaints <- df[df$Complaint.Type %in% ct,]
df_complaints$Complaint.Date <- as.Date(as.POSIXct(df_complaints$Created.Date, format="%m/%d/%Y"))
df_complaints$Complaint.Hour <- hour(as.POSIXct(df_complaints$Created.Date, format="%m/%d/%Y %I:%M:%S %p"))
df_complaints_when <- df_complaints[,c("Complaint.Hour","Complaint.Type")]
df_complaints_when <- dcast(df_complaints_when, Complaint.Type~Complaint.Hour)
names(df_complaints_when) <- c("Complaint.Type", "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23")
ggparcoord(df_complaints_when, columns = 2:25, groupColumn = "Complaint.Type", scale = "globalminmax")
library(dplyr)
library(lubridate)
library(GGally)
library(reshape2)
# load data
df <- read.csv("../data/311_feb.csv")
# get top 15 complaints
w = table(df$Complaint.Type)
t = as.data.frame(w)
names(t)[1] = 'Complaint.Type'
ct <- head(t[order(t$Freq, decreasing = TRUE),c(1,2)], 15)$Complaint.Type
df_complaints <- df[df$Complaint.Type %in% ct,]
df_complaints$Complaint.Date <- as.Date(as.POSIXct(df_complaints$Created.Date, format="%m/%d/%Y"))
df_complaints$Complaint.Hour <- hour(as.POSIXct(df_complaints$Created.Date, format="%m/%d/%Y %I:%M:%S %p"))
df_complaints_when <- df_complaints[,c("Complaint.Hour","Complaint.Type")]
df_complaints_when <- dcast(df_complaints_when, Complaint.Type~Complaint.Hour)
names(df_complaints_when) <- c("Complaint.Type", "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23")
write.csv(df_complaints_when, row.names=F, file = "311_complaints_when.csv")
ggparcoord(df_complaints_when, columns = 2:25, groupColumn = "Complaint.Type", scale = "globalminmax")
runApp('Documents/columbia/NYC311Project/nyc311app')
library(ggplot2)
library(zipcode)
library(ggmap)
# load data
df <- read.csv("../data/311_feb.csv")
# get top 15 complaints
w = table(df$Complaint.Type)
t = as.data.frame(w)
names(t)[1] = 'Complaint.Type'
ct <- head(t[order(t$Freq, decreasing = TRUE),c(1,2)], 15)$Complaint.Type
df_complaints <- df[df$Complaint.Type %in% ct,]
# select and remove NAs
df_select <- df_complaints[c('Complaint.Type','Longitude', 'Latitude')]
df_select <- na.omit(df_select)
# write to csv
# write.csv(df_select, row.names=F, file = "311_complaints_where.csv")
nyc_map +
geom_point(data = df_select, aes(x = Longitude, y = Latitude, colour = Complaint.Type, alpha=.5)) +
geom_text(show_guide  = F)
nyc_map <- qmap('New York City', zoom = 11)
nyc_map <- qmap('New York City', zoom = 11)
nyc_map +
geom_point(data = df_select, aes(x = Longitude, y = Latitude, colour = Complaint.Type, alpha=.5)) +
geom_text(show_guide  = F)
nyc_map +
geom_point(data = df_select, aes(x = Longitude, y = Latitude, colour = Complaint.Type, alpha=.5)) +
geom_text(show_guide  = FALSE)
nyc_map +
geom_point(data = df_select, aes(x = Longitude, y = Latitude, colour = Complaint.Type, alpha=.5), show_guide  = FALSE) +
ggtitle(
expression(
atop("Where Does Each Complaint Occur")
)
)
nyc_map +
geom_point(data = df_select, aes(x = Longitude, y = Latitude, colour = Complaint.Type, alpha=.5)) +
ggtitle(
expression(
atop("Where Does Each Complaint Occur")
)
)
shiny::runApp('Documents/columbia/NYC311Project/nyc311app')
rsconnect::deployApp('/Users/olehdubno/Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
rsconnect::deployApp('/Users/olehdubno/Documents/columbia/NYC311Project/nyc311app')
df
unique(df$Borough)
unique(df$City)
d <- df[c('Borough', 'City')]
d
d[d$Borough == 'Unspecified',]
library(ggplot2)
library(zipcode)
library(ggmap)
# load data
df <- read.csv("../data/311_feb.csv")
# get top 15 complaints
w = table(df$Complaint.Type)
t = as.data.frame(w)
names(t)[1] = 'Complaint.Type'
ct <- head(t[order(t$Freq, decreasing = TRUE),c(1,2)], 15)$Complaint.Type
df_complaints <- df[df$Complaint.Type %in% ct,]
# select and remove NAs
df_select <- df_complaints[c('Complaint.Type','Longitude', 'Latitude')]
df_select <- na.omit(df_select)
# write to csv
# write.csv(df_select, row.names=F, file = "311_complaints_where.csv")
# create map
nyc_map <- qmap('New York City', zoom = 11)
# plot
nyc_map +
geom_point(data = df_select, aes(x = Longitude, y = Latitude, colour = Complaint.Type, alpha=.5)) +
ggtitle(
expression(
atop("Where Does Each Complaint Occur")
)
)
library(ggplot2)
library(zipcode)
library(ggmap)
# load data
df <- read.csv("../data/311_feb.csv")
# get top 15 complaints
w = table(df$Complaint.Type)
t = as.data.frame(w)
names(t)[1] = 'Complaint.Type'
ct <- head(t[order(t$Freq, decreasing = TRUE),c(1,2)], 15)$Complaint.Type
df_complaints <- df[df$Complaint.Type %in% ct,]
# select and remove NAs
df_select <- df_complaints[c('Complaint.Type','Longitude', 'Latitude')]
df_select <- na.omit(df_select)
# write to csv
# write.csv(df_select, row.names=F, file = "311_complaints_where.csv")
# create map
nyc_map <- qmap('New York City', zoom = 11)
# plot
nyc_map +
geom_point(data = df_select, aes(x = Longitude, y = Latitude, colour = Complaint.Type, alpha=.5)) +
ggtitle(
expression(
atop("Where Does Each Complaint Occur")
)
)
runApp('Documents/columbia/NYC311Project/nyc311app')
rsconnect::deployApp('/Users/olehdubno/Documents/columbia/NYC311Project/nyc311app')
shiny::runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
rsconnect::deployApp('/Users/olehdubno/Documents/columbia/NYC311Project/nyc311app')
rsconnect::deployApp('/Users/olehdubno/Documents/columbia/NYC311Project/nyc311app')
rsconnect::deployApp('/Users/olehdubno/Documents/columbia/NYC311Project/nyc311app')
shiny::runApp('Documents/columbia/NYC311Project/nyc311app')
library(ggplot2)
library(GGally)
library(plyr)
library(tidyverse)
library(reshape2)
library(lubridate)
df <- read.csv("data/311_feb.csv")
rsconnect::deployApp('/Users/olehdubno/Documents/columbia/NYC311Project/nyc311app')
df
df[c('Boroughs','City')]
df$City
df[c('Boroughs','City'),]
df[c('Boroughs','City')]
df[c('Borough','City')]
d <-df[c('Borough','City')]
d[d$Borough == '',]
d[d$Borough == 'Unspecified',]
subset(df, Borough=='Unspecified')
subset(d, Borough=='Unspecified')
d <-df[c('Borough','City','Complaint.Type')]
subset(d, Borough=='Unspecified')
library(dplyr)
library(ggplot2)
# load data
df <- read.csv("../data/311_feb.csv")
# get top 15 complaints
w = table(df$Complaint.Type)
t = as.data.frame(w)
names(t)[1] = 'Complaint.Type'
ct <- head(t[order(t$Freq, decreasing = TRUE),c(1,2)], 15)$Complaint.Type
df_complaints <- df[df$Complaint.Type %in% ct,]
# Select only Borough and Complaint.Type columns
# Reorganzie the data frame and make Borough into indvidual columns.
df_select <- select(df_complaints, Borough, Complaint.Type)
df_tally <- df_select %>% group_by(Borough, Complaint.Type) %>% tally()
df_tally$Borough <- chartr(" ", ".", df_tally$Borough) # "Staten Island" should be "Staten.Island"
df_select %>% group_by(Borough, Complaint.Type) %>% tally()
ggplot(df_tally, aes(x=factor(Borough), y=n, fill=Complaint.Type)) +
geom_bar(stat='identity', position='dodge') +
coord_flip()
runApp('Documents/columbia/NYC311Project/nyc311app')

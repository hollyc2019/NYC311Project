xlab('') +
ylab('') +
scale_fill_viridis(discrete=TRUE) +
theme_bw() +
ggtitle(
expression(
atop("Where Do Complaints Occur",
atop("EXPLORING THE FREQUENCY OF COMPLAINTS GEOGRAPHICALLY", ""))
)
)
ny_plot +
ny_stat_density +
guides(fill = guide_colorbar(barwidth = 1, barheight = 12)) +
scale_fill_gradient(low = "green", high = "red") +
scale_alpha(range = c(0, 0.5), guide = FALSE) +
xlab('') +
ylab('') +
scale_fill_viridis() +
theme_bw() +
ggtitle(
expression(
atop("Where Do Complaints Occur",
atop("EXPLORING THE FREQUENCY OF COMPLAINTS GEOGRAPHICALLY", ""))
)
)
ny_plot +
ny_stat_density +
guides(fill = guide_colorbar(barwidth = 1, barheight = 12)) +
scale_fill_gradient(low = "green", high = "red") +
scale_alpha(range = c(0, 0.5), guide = FALSE) +
xlab('') +
ylab('') +
scale_fill_viridis(start=1, end=0) +
theme_bw() +
ggtitle(
expression(
atop("Where Do Complaints Occur",
atop("EXPLORING THE FREQUENCY OF COMPLAINTS GEOGRAPHICALLY", ""))
)
)
ny_plot +
ny_stat_density +
guides(fill = guide_colorbar(barwidth = 1, barheight = 12)) +
scale_fill_gradient(low = "green", high = "red") +
scale_alpha(range = c(0, 0.5), guide = FALSE) +
xlab('') +
ylab('') +
scale_fill_viridis(begin=1, end=0) +
theme_bw() +
ggtitle(
expression(
atop("Where Do Complaints Occur",
atop("EXPLORING THE FREQUENCY OF COMPLAINTS GEOGRAPHICALLY", ""))
)
)
ny_plot +
ny_stat_density +
guides(fill = guide_colorbar(barwidth = 1, barheight = 12)) +
scale_fill_gradient(low = "green", high = "red") +
scale_alpha(range = c(0, 0.5), guide = FALSE) +
xlab('') +
ylab('') +
scale_fill_viridis(begin=1, end=0) +
theme_bw() +
ggtitle(
expression(
atop("Where Do Complaints Occur",
atop("EXPLORING THE FREQUENCY OF COMPLAINTS GEOGRAPHICALLY", ""))
)
)
ny_plot +
ny_stat_density +
guides(fill = guide_colorbar(barwidth = 1, barheight = 12)) +
scale_fill_gradient(low = "green", high = "red") +
scale_alpha(range = c(0, 0.5), guide = FALSE) +
xlab('') +
ylab('') +
scale_fill_viridis(begin=1, end=0) +
theme_bw() +
ggtitle(
expression(
atop("Where Do Complaints Occur",
atop("EXPLORING THE FREQUENCY OF COMPLAINTS GEOGRAPHICALLY", ""))
)
)
ny_plot +
ny_stat_density +
guides(fill = guide_colorbar(barwidth = 2, barheight = 12)) +
scale_alpha(range = c(0, 0.5), guide = FALSE) +
xlab('') +
ylab('') +
scale_fill_viridis(begin=1, end=0) +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
ggtitle(
expression(
atop("Where Do Complaints Occur",
atop("EXPLORING THE FREQUENCY OF COMPLAINTS GEOGRAPHICALLY", ""))
)
)
ny_plot +
ny_stat_density +
guides(fill = guide_colorbar(barwidth = 2, barheight = 12)) +
scale_alpha(range = c(0, 0.5), guide = FALSE) +
xlab('') +
ylab('') +
scale_fill_viridis(begin=1, end=0) +
theme_bw() +
ggtitle(
expression(
atop("Where Do Complaints Occur",
atop("EXPLORING THE FREQUENCY OF COMPLAINTS GEOGRAPHICALLY", ""))
)
) +
theme(plot.title = element_text(hjust = 0.5))
my_theme <- theme(plot.title = element_text(family = "Helvetica", face = "bold", size = (25), hjust = 0.5),
plot.subtitle=element_text(family = "Helvetica", face = "bold", size = (25)),
axis.text.x = element_text(angle = 0, hjust = .5),
legend.title = element_text(face = "bold.italic", family = "Helvetica", size=20),
legend.text = element_text(face = "italic", family = "Helvetica", size=13),
axis.title = element_text(family = "Helvetica", size = (20)),
axis.text = element_text(family = "Courier", size = (13)))
ny_plot +
ny_stat_density +
guides(fill = guide_colorbar(barwidth = 2, barheight = 12)) +
scale_alpha(range = c(0, 0.5), guide = FALSE) +
xlab('') +
ylab('') +
scale_fill_viridis(begin=1, end=0) +
theme_bw() +
ggtitle(
expression(
atop("Where Do Complaints Occur",
atop("EXPLORING THE FREQUENCY OF COMPLAINTS GEOGRAPHICALLY", ""))
)
) +
my_theme
my_theme <- theme(plot.title = element_text(family = "Helvetica", face = "bold", size = (20), hjust = 0.5),
plot.subtitle=element_text(family = "Helvetica", face = "bold", size = (25)),
axis.text.x = element_text(angle = 0, hjust = .5),
legend.title = element_text(face = "bold.italic", family = "Helvetica", size=20),
legend.text = element_text(face = "italic", family = "Helvetica", size=13),
axis.title = element_text(family = "Helvetica", size = (20)),
axis.text = element_text(family = "Courier", size = (13)))
ny_plot +
ny_stat_density +
guides(fill = guide_colorbar(barwidth = 2, barheight = 12)) +
scale_alpha(range = c(0, 0.5), guide = FALSE) +
xlab('') +
ylab('') +
scale_fill_viridis(begin=1, end=0) +
theme_bw() +
ggtitle(
expression(
atop("Where Do Complaints Occur",
atop("EXPLORING THE FREQUENCY OF COMPLAINTS GEOGRAPHICALLY", ""))
)
) +
my_theme
my_theme <- theme(plot.title = element_text(family = "Helvetica", face = "bold", size = (20), hjust = 0.5),
plot.subtitle=element_text(family = "Helvetica", face = "bold", size = (25)),
axis.text.x = element_text(angle = 0, hjust = .5),
legend.title = element_text(face = "bold.italic", family = "Helvetica", size=20),
legend.text = element_text(face = "italic", family = "Helvetica", size=13),
axis.title = element_text(family = "Helvetica", size = (20)),
axis.text = element_text(family = "Courier", size = (13)))
ny_plot +
ny_stat_density +
guides(fill = guide_colorbar(barwidth = 2, barheight = 12)) +
scale_alpha(range = c(0, 0.5), guide = FALSE) +
xlab('') +
ylab('') +
scale_fill_viridis(begin=1, end=0) +
theme_bw() +
ggtitle(
expression(
atop("Where Do Complaints Occur",
atop("EXPLORING THE FREQUENCY OF COMPLAINTS GEOGRAPHICALLY", ""))
)
) +
my_theme
library(lubridate)
library(dplyr)
library(reshape2)
library(ggplot2)
df <- read.csv("../data/311_feb.csv")
# filter by top 15 complaints; filtering out only 35% of data.
w = table(df$Complaint.Type)
t = as.data.frame(w)
names(t)[1] = 'Complaint.Type'
ct <- head(t[order(t$Freq, decreasing = TRUE),c(1,2)], 15)$Complaint.Type
df_filtered <- df[df$Complaint.Type %in% ct,]
# clean the date column
df_filtered$Created.Date <- as.POSIXct(df_filtered$Created.Date, format="%m/%d/%Y %I:%M:%S %p")
df_filtered$Closed.Date <- as.POSIXct(df_filtered$Closed.Date, format="%m/%d/%Y %I:%M:%S %p")
df_filtered$Resolution.Hours <- (as.numeric(df_filtered$Closed.Date - df_filtered$Created.Date) / 60) / 60
df_select <- df_filtered[,c("Borough","Complaint.Type", "Resolution.Hours")]
df_select$Borough <- chartr(" ", ".", df_select$Borough) # "Staten Island" should be "Staten.Island"
# aggregate by the mean of resolution minutes
df_borough_create_time <- aggregate(x=df_select$Resolution.Hours,
by=list(df_select$Borough,df_select$Complaint.Type),
FUN=mean, na.rm=TRUE, na.action=NULL)
names(df_borough_create_time) <- c("Borough", "Complaint.Type", "Resolution.Mean")
# save the csv
# write.csv(df_borough_create_time, row.names=F, file = "311_boroughs_complaints_how.csv")
my_theme <- theme(plot.title = element_text(family = "Helvetica", face = "bold", size = (25)),
plot.subtitle=element_text(family = "Helvetica", face = "bold", size = (25)),
axis.text.x = element_text(angle = 0, hjust = .5),
legend.title = element_text(face = "bold.italic", family = "Helvetica", size=20),
legend.text = element_text(face = "italic", family = "Helvetica", size=13),
axis.title = element_text(family = "Helvetica", size = (20)),
axis.text = element_text(family = "Courier", size = (13)))
# plot
ggplot(df_borough_create_time, aes(x=factor(Borough), y=Resolution.Mean, fill=Complaint.Type)) +
geom_bar(stat='identity', position='dodge') +
scale_fill_viridis(discrete=TRUE) +
theme_bw() +
coord_flip()
my_theme <- theme(plot.title = element_text(family = "Helvetica", face = "bold", size = (25)),
plot.subtitle=element_text(family = "Helvetica", face = "bold", size = (25)),
axis.text.x = element_text(angle = 0, hjust = .5),
legend.title = element_text(face = "bold.italic", family = "Helvetica", size=20),
legend.text = element_text(face = "italic", family = "Helvetica", size=13),
axis.title = element_text(family = "Helvetica", size = (20)),
axis.text = element_text(family = "Courier", size = (13)))
# plot
ggplot(df_borough_create_time, aes(x=factor(Borough), y=Resolution.Mean, fill=Complaint.Type)) +
geom_bar(stat='identity', position='dodge') +
labs(
title = "How Long Does It Take",
subtitle = "For A Complaint To Get Resolved",
x = "Complaint Type",
y = "Complaint Resolution (Hours)"
) +
scale_fill_viridis(discrete=TRUE) +
theme_bw() +
coord_flip()
library(dplyr)
library(lubridate)
library(GGally)
library(reshape2)
# load data
df <- read.csv("../data/311_feb.csv")
# get top 15 complaints
w = table(df$Complaint.Type)
t = as.data.frame(w)
names(t)[1] = 'Complaint.Type'
ct <- head(t[order(t$Freq, decreasing = TRUE),c(1,2)], 15)$Complaint.Type
df_complaints <- df[df$Complaint.Type %in% ct,]
df_complaints$Complaint.Date <- as.Date(as.POSIXct(df_complaints$Created.Date, format="%m/%d/%Y"))
df_complaints$Complaint.Hour <- hour(as.POSIXct(df_complaints$Created.Date, format="%m/%d/%Y %I:%M:%S %p"))
df_complaints_when <- df_complaints[,c("Complaint.Hour","Complaint.Type")]
df_complaints_when <- dcast(df_complaints_when, Complaint.Type~Complaint.Hour)
names(df_complaints_when) <- c("Complaint.Type", "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23")
# Save csv
# write.csv(df_complaints_when, row.names=F, file = "311_complaints_when.csv")
my_theme <- theme(plot.title = element_text(family = "Helvetica", face = "bold", size = (25)),
plot.subtitle=element_text(family = "Helvetica", face = "bold", size = (25)),
axis.text.x = element_text(angle = 0, hjust = .5),
legend.title = element_text(face = "bold.italic", family = "Helvetica", size=20),
legend.text = element_text(face = "italic", family = "Helvetica", size=13),
axis.title = element_text(family = "Helvetica", size = (20)),
axis.text = element_text(family = "Courier", size = (13)))
ggparcoord(df_complaints_when, columns = 2:25, groupColumn = "Complaint.Type", scale = "globalminmax") +
labs(
title = "When Do Complaints Occur",
x = "Hours (00=Midnight)",
y = "Number Of Complaints"
)
scale_fill_viridis(discrete=TRUE) +
theme_bw() +
my_theme +
my_theme <- theme(plot.title = element_text(family = "Helvetica", face = "bold", size = (25)),
plot.subtitle=element_text(family = "Helvetica", face = "bold", size = (25)),
axis.text.x = element_text(angle = 0, hjust = .5),
legend.title = element_text(face = "bold.italic", family = "Helvetica", size=20),
legend.text = element_text(face = "italic", family = "Helvetica", size=13),
axis.title = element_text(family = "Helvetica", size = (20)),
axis.text = element_text(family = "Courier", size = (13)))
ggparcoord(df_complaints_when, columns = 2:25, groupColumn = "Complaint.Type", scale = "globalminmax") +
labs(
title = "When Do Complaints Occur",
x = "Hours (00=Midnight)",
y = "Number Of Complaints"
)
scale_fill_viridis() +
theme_bw() +
my_theme +
my_theme <- theme(plot.title = element_text(family = "Helvetica", face = "bold", size = (25)),
plot.subtitle=element_text(family = "Helvetica", face = "bold", size = (25)),
axis.text.x = element_text(angle = 0, hjust = .5),
legend.title = element_text(face = "bold.italic", family = "Helvetica", size=20),
legend.text = element_text(face = "italic", family = "Helvetica", size=13),
axis.title = element_text(family = "Helvetica", size = (20)),
axis.text = element_text(family = "Courier", size = (13)))
ggparcoord(df_complaints_when, columns = 2:25, groupColumn = "Complaint.Type", scale = "globalminmax") +
labs(
title = "When Do Complaints Occur",
x = "Hours (00=Midnight)",
y = "Number Of Complaints"
)
scale_fill_viridis() +
theme_bw() +
my_theme
my_theme <- theme(plot.title = element_text(family = "Helvetica", face = "bold", size = (25)),
plot.subtitle=element_text(family = "Helvetica", face = "bold", size = (25)),
axis.text.x = element_text(angle = 0, hjust = .5),
legend.title = element_text(face = "bold.italic", family = "Helvetica", size=20),
legend.text = element_text(face = "italic", family = "Helvetica", size=13),
axis.title = element_text(family = "Helvetica", size = (20)),
axis.text = element_text(family = "Courier", size = (13)))
ggparcoord(df_complaints_when, columns = 2:25, groupColumn = "Complaint.Type", scale = "globalminmax") +
labs(
title = "When Do Complaints Occur",
x = "Hours (00=Midnight)",
y = "Number Of Complaints"
)
scale_fill_viridis(discrete = True) +
theme_bw() +
my_theme
my_theme <- theme(plot.title = element_text(family = "Helvetica", face = "bold", size = (25)),
plot.subtitle=element_text(family = "Helvetica", face = "bold", size = (25)),
axis.text.x = element_text(angle = 0, hjust = .5),
legend.title = element_text(face = "bold.italic", family = "Helvetica", size=20),
legend.text = element_text(face = "italic", family = "Helvetica", size=13),
axis.title = element_text(family = "Helvetica", size = (20)),
axis.text = element_text(family = "Courier", size = (13)))
ggparcoord(df_complaints_when, columns = 2:25, groupColumn = "Complaint.Type", scale = "globalminmax") +
labs(
title = "When Do Complaints Occur",
x = "Hours (00=Midnight)",
y = "Number Of Complaints"
)
scale_fill_viridis() +
theme_bw() +
my_theme
library(ggplot2)
library(zipcode)
library(ggmap)
# load data
df <- read.csv("../data/311_feb.csv")
# get top 15 complaints
w = table(df$Complaint.Type)
t = as.data.frame(w)
names(t)[1] = 'Complaint.Type'
ct <- head(t[order(t$Freq, decreasing = TRUE),c(1,2)], 15)$Complaint.Type
df_complaints <- df[df$Complaint.Type %in% ct,]
# select and remove NAs
df_select <- df_complaints[c('Complaint.Type','Longitude', 'Latitude')]
df_select <- na.omit(df_select)
# write to csv
# write.csv(df_select, row.names=F, file = "311_complaints_where.csv")
# create map
nyc_map <- qmap('New York City', zoom = 11)
# get top 15 complaints
w = table(df$Complaint.Type)
t = as.data.frame(w)
names(t)[1] = 'Complaint.Type'
ct <- head(t[order(t$Freq, decreasing = TRUE),c(1,2)], 15)$Complaint.Type
df_complaints <- df[df$Complaint.Type %in% ct,]
# select and remove NAs
df_select <- df_complaints[c('Complaint.Type','Longitude', 'Latitude')]
df_select <- na.omit(df_select)
# write to csv
# write.csv(df_select, row.names=F, file = "311_complaints_where.csv")
# create map
nyc_map <- qmap('New York City', zoom = 11)
# get top 15 complaints
w = table(df$Complaint.Type)
t = as.data.frame(w)
names(t)[1] = 'Complaint.Type'
ct <- head(t[order(t$Freq, decreasing = TRUE),c(1,2)], 15)$Complaint.Type
df_complaints <- df[df$Complaint.Type %in% ct,]
# select and remove NAs
df_select <- df_complaints[c('Complaint.Type','Longitude', 'Latitude')]
df_select <- na.omit(df_select)
# write to csv
# write.csv(df_select, row.names=F, file = "311_complaints_where.csv")
# create map
nyc_map <- qmap('New York City', zoom = 11)
# get top 15 complaints
w = table(df$Complaint.Type)
t = as.data.frame(w)
names(t)[1] = 'Complaint.Type'
ct <- head(t[order(t$Freq, decreasing = TRUE),c(1,2)], 15)$Complaint.Type
df_complaints <- df[df$Complaint.Type %in% ct,]
# select and remove NAs
df_select <- df_complaints[c('Complaint.Type','Longitude', 'Latitude')]
df_select <- na.omit(df_select)
# write to csv
# write.csv(df_select, row.names=F, file = "311_complaints_where.csv")
# create map
nyc_map <- qmap('New York City', zoom = 11)
my_theme <- theme(plot.title = element_text(family = "Helvetica", face = "bold", size = (25)),
plot.subtitle=element_text(family = "Helvetica", face = "bold", size = (25)),
axis.text.x = element_text(angle = 0, hjust = .5),
legend.title = element_text(face = "bold.italic", family = "Helvetica", size=20),
legend.text = element_text(face = "italic", family = "Helvetica", size=13),
axis.title = element_text(family = "Helvetica", size = (20)),
axis.text = element_text(family = "Courier", size = (13)))
# plot
nyc_map +
geom_point(data = df_select, aes(x = Longitude, y = Latitude, colour = Complaint.Type, alpha=.5)) +
scale_fill_viridis(discrete=TRUE) +
theme_bw() +
ggtitle(
expression(
atop("Where Does Each Complaint Occur")
)
)
my_theme <- theme(plot.title = element_text(family = "Helvetica", face = "bold", size = (25)),
plot.subtitle=element_text(family = "Helvetica", face = "bold", size = (25)),
axis.text.x = element_text(angle = 0, hjust = .5),
legend.title = element_text(face = "bold.italic", family = "Helvetica", size=20),
legend.text = element_text(face = "italic", family = "Helvetica", size=13),
axis.title = element_text(family = "Helvetica", size = (20)),
axis.text = element_text(family = "Courier", size = (13)))
# plot
nyc_map +
geom_point(data = df_select, aes(x = Longitude, y = Latitude, colour = Complaint.Type, alpha=.5)) +
scale_fill_viridis(discrete=TRUE) +
theme_bw() +
ggtitle(
expression(
atop("Where Does Each Complaint Occur")
)
)
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
rsconnect::deployApp('/Users/olehdubno/Documents/columbia/NYC311Project/nyc311app')
shiny::runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
rsconnect::deployApp('/Users/olehdubno/Documents/columbia/NYC311Project/nyc311app')
library(dplyr)
library(lubridate)
library(ggplot2)
path_1 <- 'https://nycopendata.socrata.com/api/views/fhrw-4uyv/rows.csv?accessType=DOWNLOAD&query=select+*+where+%60created_date%60+%3E%3D+%27'
start_date <- '2018-04-05'
path_2 <- 'T00%3A00%3A00%27+AND+%60created_date%60+%3C+%27'
end_date <- '2018-04-07'
path_3 <- 'T23%3A59%3A59%27'
live_url <- paste(path_1, start_date, path_2, end_date, path_3, sep='')
live_data <- read.csv(live_url)
live_data$Complaint.Date <- as.Date(as.POSIXct(live_data$Created.Date, format="%m/%d/%Y"))
live_data$Complaint.Hour <- hour(as.POSIXct(live_data$Created.Date, format="%m/%d/%Y %I:%M:%S %p"))
hour_range <- c(0:23)
live_data <- live_data[live_data$Complaint.Hour %in% hour_range, ]
w = table(live_data$Complaint.Type)
t = as.data.frame(w)
names(t)[1] = 'Complaint.Type'
ct <- head(t[order(t$Freq, decreasing = TRUE),c(1,2)], 15)$Complaint.Type
df_complaints <- live_data[live_data$Complaint.Type %in% ct,]
# Select desired columns and remove NAs
df_live_select <- df_complaints[c('Complaint.Type','Longitude', 'Latitude')]
df_live_select <- na.omit(df_live_select)
# Plot
my_titles <- labs(
title = "Where Do Complaints Occur",
subtitle = '',
x = '',
y = ''
)
nyc_map +
geom_point(data = df_live_select, aes(x = Longitude, y = Latitude, colour = Complaint.Type), alpha=.5) +
my_titles
x <- qmap('New York City', zoom = 11)
x <- qmap('New York City', zoom = 11)
saveRDS(x, 'ggmap_nyc.rds')
# x <- readRDS(t)
# ggmap(x)
# nyc_map <- ggmap(readRDS('data/nyc_map.rds'))
# nyc_map <- ''
nyc_map <- qmap('New York City', zoom = 11)
nyc_map <- qmap('New York City', zoom = 11)
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')

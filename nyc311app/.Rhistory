axis.text.x = element_text(angle = 0, hjust = .5),
legend.title = element_text(face = "bold.italic", family = "Helvetica", size=20),
legend.text = element_text(face = "italic", family = "Helvetica", size=13),
axis.title = element_text(family = "Helvetica", size = (20)),
axis.text = element_text(family = "Courier", size = (13)))
# plot
nyc_map +
geom_point(data = df_select, aes(x = Longitude, y = Latitude, colour = Complaint.Type, alpha=.5)) +
scale_fill_viridis(discrete=TRUE) +
theme_bw() +
ggtitle(
expression(
atop("Where Does Each Complaint Occur")
)
)
my_theme <- theme(plot.title = element_text(family = "Helvetica", face = "bold", size = (25)),
plot.subtitle=element_text(family = "Helvetica", face = "bold", size = (25)),
axis.text.x = element_text(angle = 0, hjust = .5),
legend.title = element_text(face = "bold.italic", family = "Helvetica", size=20),
legend.text = element_text(face = "italic", family = "Helvetica", size=13),
axis.title = element_text(family = "Helvetica", size = (20)),
axis.text = element_text(family = "Courier", size = (13)))
# plot
nyc_map +
geom_point(data = df_select, aes(x = Longitude, y = Latitude, colour = Complaint.Type, alpha=.5)) +
scale_fill_viridis(discrete=TRUE) +
theme_bw() +
ggtitle(
expression(
atop("Where Does Each Complaint Occur")
)
)
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
rsconnect::deployApp('/Users/olehdubno/Documents/columbia/NYC311Project/nyc311app')
library(ggplot2)
library(ggmap)
df <- read.csv("../data/311_feb.csv")
ny_plot <- ggmap(get_map('New York City', zoom=11, maptype='terrain'))
ny_stat_density <- stat_density2d(data=df, aes(x = df$Longitude, y = df$Latitude, alpha=.6, fill=..level..), bins = 10, geom = 'polygon', na.rm=TRUE)
brooklyn <- df[df$Complaint.Type == 'BROOKLYN',]
brooklyn <- df[df$Complaint.Type == 'Brooklyn',]
df
unique(df$Borough)
brooklyn <- df[df$Complaint.Type == 'BROOKLYN',]
brooklyn
unique(df$Borough)
brooklyn <- df[df$Borough == 'BROOKLYN',]
brooklyn
brooklyn <- df[df$Borough == 'BROOKLYN',]
ny_plot <- ggmap(get_map('New York City', zoom=11, maptype='terrain'))
ny_stat_density <- stat_density2d(data=brooklyn, aes(x = df$Longitude, y = df$Latitude, alpha=.6, fill=..level..), bins = 10, geom = 'polygon', na.rm=TRUE)
my_theme <- theme(plot.title = element_text(family = "Helvetica", face = "bold", size = (20), hjust = 0.5),
plot.subtitle=element_text(family = "Helvetica", face = "bold", size = (25)),
axis.text.x = element_text(angle = 0, hjust = .5),
legend.title = element_text(face = "bold.italic", family = "Helvetica", size=20),
legend.text = element_text(face = "italic", family = "Helvetica", size=13),
axis.title = element_text(family = "Helvetica", size = (20)),
axis.text = element_text(family = "Courier", size = (13)))
ny_plot +
ny_stat_density +
guides(fill = guide_colorbar(barwidth = 2, barheight = 12)) +
scale_alpha(range = c(0, 0.5), guide = FALSE) +
xlab('') +
ylab('') +
scale_fill_viridis(begin=1, end=0) +
theme_bw() +
ggtitle(
expression(
atop("When Do Complaints Occur",
atop("EXPLORING THE FREQUENCY OF COMPLAINTS GEOGRAPHICALLY", ""))
)
) +
my_theme
library(scale)
library(viridis)
unique(df$Borough)
brooklyn <- df[df$Borough == 'BROOKLYN',]
ny_plot <- ggmap(get_map('New York City', zoom=11, maptype='terrain'))
brooklyn <- df[df$Borough == 'BROOKLYN',]
ny_plot <- ggmap(get_map('New York City', zoom=11, maptype='terrain'))
ny_stat_density <- stat_density2d(data=brooklyn, aes(x = df$Longitude, y = df$Latitude, alpha=.6, fill=..level..), bins = 10, geom = 'polygon', na.rm=TRUE)
my_theme <- theme(plot.title = element_text(family = "Helvetica", face = "bold", size = (20), hjust = 0.5),
plot.subtitle=element_text(family = "Helvetica", face = "bold", size = (25)),
axis.text.x = element_text(angle = 0, hjust = .5),
legend.title = element_text(face = "bold.italic", family = "Helvetica", size=20),
legend.text = element_text(face = "italic", family = "Helvetica", size=13),
axis.title = element_text(family = "Helvetica", size = (20)),
axis.text = element_text(family = "Courier", size = (13)))
ny_plot +
ny_stat_density +
guides(fill = guide_colorbar(barwidth = 2, barheight = 12)) +
scale_alpha(range = c(0, 0.5), guide = FALSE) +
xlab('') +
ylab('') +
scale_fill_viridis(begin=1, end=0) +
theme_bw() +
ggtitle(
expression(
atop("When Do Complaints Occur",
atop("EXPLORING THE FREQUENCY OF COMPLAINTS GEOGRAPHICALLY", ""))
)
) +
my_theme
library(scales)
unique(df$Borough)
brooklyn <- df[df$Borough == 'BROOKLYN',]
ny_plot <- ggmap(get_map('New York City', zoom=11, maptype='terrain'))
ny_stat_density <- stat_density2d(data=brooklyn, aes(x = df$Longitude, y = df$Latitude, alpha=.6, fill=..level..), bins = 10, geom = 'polygon', na.rm=TRUE)
my_theme <- theme(plot.title = element_text(family = "Helvetica", face = "bold", size = (20), hjust = 0.5),
plot.subtitle=element_text(family = "Helvetica", face = "bold", size = (25)),
axis.text.x = element_text(angle = 0, hjust = .5),
legend.title = element_text(face = "bold.italic", family = "Helvetica", size=20),
legend.text = element_text(face = "italic", family = "Helvetica", size=13),
axis.title = element_text(family = "Helvetica", size = (20)),
axis.text = element_text(family = "Courier", size = (13)))
ny_plot +
ny_stat_density +
guides(fill = guide_colorbar(barwidth = 2, barheight = 12)) +
scale_alpha(range = c(0, 0.5), guide = FALSE) +
xlab('') +
ylab('') +
scale_fill_viridis(begin=1, end=0) +
theme_bw() +
ggtitle(
expression(
atop("When Do Complaints Occur",
atop("EXPLORING THE FREQUENCY OF COMPLAINTS GEOGRAPHICALLY", ""))
)
) +
my_theme
brooklyn <- df[df$Borough == 'BROOKLYN',]
ny_plot <- ggmap(get_map('New York City', zoom=11, maptype='terrain'))
brooklyn <- df[df$Borough == 'BROOKLYN',]
ny_plot <- ggmap(get_map('New York City', zoom=11, maptype='terrain'))
ny_stat_density <- stat_density2d(data=brooklyn, aes(x = df$Longitude, y = df$Latitude, alpha=.6, fill=..level..), bins = 10, geom = 'polygon', na.rm=TRUE)
my_theme <- theme(plot.title = element_text(family = "Helvetica", face = "bold", size = (20), hjust = 0.5),
plot.subtitle=element_text(family = "Helvetica", face = "bold", size = (25)),
axis.text.x = element_text(angle = 0, hjust = .5),
legend.title = element_text(face = "bold.italic", family = "Helvetica", size=20),
legend.text = element_text(face = "italic", family = "Helvetica", size=13),
axis.title = element_text(family = "Helvetica", size = (20)),
axis.text = element_text(family = "Courier", size = (13)))
ny_plot +
ny_stat_density +
guides(fill = guide_colorbar(barwidth = 2, barheight = 12)) +
scale_alpha(range = c(0, 0.5), guide = FALSE) +
xlab('') +
ylab('') +
theme_bw() +
ggtitle(
expression(
atop("When Do Complaints Occur",
atop("EXPLORING THE FREQUENCY OF COMPLAINTS GEOGRAPHICALLY", ""))
)
) +
my_theme
brooklyn <- df[df$Borough == 'BROOKLYN',]
ny_plot <- ggmap(get_map('New York City', zoom=11, maptype='terrain'))
brooklyn <- df[df$Borough == 'BROOKLYN',]
ny_plot <- ggmap(get_map('New York City', zoom=11, maptype='terrain'))
ny_stat_density <- stat_density2d(data=brooklyn, aes(x = brooklyn$Longitude, y = brooklyn$Latitude, alpha=.6, fill=..level..), bins = 10, geom = 'polygon', na.rm=TRUE)
my_theme <- theme(plot.title = element_text(family = "Helvetica", face = "bold", size = (20), hjust = 0.5),
plot.subtitle=element_text(family = "Helvetica", face = "bold", size = (25)),
axis.text.x = element_text(angle = 0, hjust = .5),
legend.title = element_text(face = "bold.italic", family = "Helvetica", size=20),
legend.text = element_text(face = "italic", family = "Helvetica", size=13),
axis.title = element_text(family = "Helvetica", size = (20)),
axis.text = element_text(family = "Courier", size = (13)))
ny_plot +
ny_stat_density +
guides(fill = guide_colorbar(barwidth = 2, barheight = 12)) +
scale_alpha(range = c(0, 0.5), guide = FALSE) +
xlab('') +
ylab('') +
scale_fill_viridis(begin=1, end=0) +
theme_bw() +
ggtitle(
expression(
atop("When Do Complaints Occur",
atop("EXPLORING THE FREQUENCY OF COMPLAINTS GEOGRAPHICALLY", ""))
)
) +
my_theme
my_theme <- theme(plot.title = element_text(family = "Helvetica", face = "bold", size = (20), hjust = 0.5),
plot.subtitle=element_text(family = "Helvetica", face = "bold", size = (25)),
axis.text.x = element_text(angle = 0, hjust = .5),
legend.title = element_text(face = "bold.italic", family = "Helvetica", size=20),
legend.text = element_text(face = "italic", family = "Helvetica", size=13),
axis.title = element_text(family = "Helvetica", size = (20)),
axis.text = element_text(family = "Courier", size = (13)))
brooklyn <- df[df$Borough == 'BROOKLYN',]
ny_plot <- ggmap(get_map('New York City', zoom=11, maptype='terrain'))
ny_stat_density <- stat_density2d(data=brooklyn, aes(x = brooklyn$Longitude, y = brooklyn$Latitude, alpha=.6, fill=..level..), bins = 10, geom = 'polygon', na.rm=TRUE)
ny_plot +
ny_stat_density +
guides(fill = guide_colorbar(barwidth = 2, barheight = 12)) +
scale_alpha(range = c(0, 0.5), guide = FALSE) +
xlab('') +
ylab('') +
scale_fill_viridis(begin=1, end=0) +
theme_bw() +
ggtitle(
expression(
atop("Where Do Complaints Occur (Brooklyn)",
atop("EXPLORING THE FREQUENCY OF COMPLAINTS GEOGRAPHICALLY", ""))
)
) +
my_theme
bronx <- df[df$Borough == 'BRONX',]
ny_plot <- ggmap(get_map('New York City', zoom=11, maptype='terrain'))
ny_stat_density <- stat_density2d(data=bronx, aes(x = bronx$Longitude, y = bronx$Latitude, alpha=.6, fill=..level..), bins = 10, geom = 'polygon', na.rm=TRUE)
ny_plot +
ny_stat_density +
guides(fill = guide_colorbar(barwidth = 2, barheight = 12)) +
scale_alpha(range = c(0, 0.5), guide = FALSE) +
xlab('') +
ylab('') +
scale_fill_viridis(begin=1, end=0) +
theme_bw() +
ggtitle(
expression(
atop("Where Do Complaints Occur (Bronx)",
atop("EXPLORING THE FREQUENCY OF COMPLAINTS GEOGRAPHICALLY", ""))
)
) +
my_theme
manhattan <- df[df$Borough == 'MANHATTAN',]
ny_plot <- ggmap(get_map('New York City', zoom=11, maptype='terrain'))
manhattan <- df[df$Borough == 'MANHATTAN',]
ny_plot <- ggmap(get_map('New York City', zoom=11, maptype='terrain'))
ny_stat_density <- stat_density2d(data=manhattan, aes(x = manhattan$Longitude, y = manhattan$Latitude, alpha=.6, fill=..level..), bins = 10, geom = 'polygon', na.rm=TRUE)
ny_plot +
ny_stat_density +
guides(fill = guide_colorbar(barwidth = 2, barheight = 12)) +
scale_alpha(range = c(0, 0.5), guide = FALSE) +
xlab('') +
ylab('') +
scale_fill_viridis(begin=1, end=0) +
theme_bw() +
ggtitle(
expression(
atop("Where Do Complaints Occur (Brooklyn)",
atop("EXPLORING THE FREQUENCY OF COMPLAINTS GEOGRAPHICALLY", ""))
)
) +
my_theme
staten_island <- df[df$Borough == 'STATEN ISLAND',]
ny_plot <- ggmap(get_map('New York City', zoom=11, maptype='terrain'))
staten_island <- df[df$Borough == 'STATEN ISLAND',]
ny_plot <- ggmap(get_map('New York City', zoom=11, maptype='terrain'))
staten_island <- df[df$Borough == 'STATEN ISLAND',]
ny_plot <- ggmap(get_map('New York City', zoom=11, maptype='terrain'))
staten_island <- df[df$Borough == 'STATEN ISLAND',]
ny_plot <- ggmap(get_map('New York City', zoom=11, maptype='terrain'))
ny_stat_density <- stat_density2d(data=staten_island, aes(x = staten_island$Longitude, y = staten_island$Latitude, alpha=.6, fill=..level..), bins = 10, geom = 'polygon', na.rm=TRUE)
ny_plot +
ny_stat_density +
guides(fill = guide_colorbar(barwidth = 2, barheight = 12)) +
scale_alpha(range = c(0, 0.5), guide = FALSE) +
xlab('') +
ylab('') +
scale_fill_viridis(begin=1, end=0) +
theme_bw() +
ggtitle(
expression(
atop("Where Do Complaints Occur (Brooklyn)",
atop("EXPLORING THE FREQUENCY OF COMPLAINTS GEOGRAPHICALLY", ""))
)
) +
my_theme
staten_island <- df[df$Borough == 'STATEN ISLAND',]
ny_plot <- ggmap(get_map('New York City', zoom=11, maptype='terrain'))
ny_stat_density <- stat_density2d(data=staten_island, aes(x = staten_island$Longitude, y = staten_island$Latitude, alpha=.6, fill=..level..), bins = 10, geom = 'polygon', na.rm=TRUE)
ny_plot +
ny_stat_density +
guides(fill = guide_colorbar(barwidth = 2, barheight = 12)) +
scale_alpha(range = c(0, 0.5), guide = FALSE) +
xlab('') +
ylab('') +
scale_fill_viridis(begin=1, end=0) +
theme_bw() +
ggtitle(
expression(
atop("Where Do Complaints Occur (Brooklyn)",
atop("EXPLORING THE FREQUENCY OF COMPLAINTS GEOGRAPHICALLY", ""))
)
) +
my_theme
staten_island <- df[df$Borough == 'STATEN ISLAND',]
ny_plot <- ggmap(get_map('New York City', zoom=11, maptype='terrain'))
ny_stat_density <- stat_density2d(data=staten_island, aes(x = staten_island$Longitude, y = staten_island$Latitude, alpha=.6, fill=..level..), bins = 10, geom = 'polygon', na.rm=TRUE)
ny_plot +
ny_stat_density +
guides(fill = guide_colorbar(barwidth = 2, barheight = 12)) +
scale_alpha(range = c(0, 0.5), guide = FALSE) +
xlab('') +
ylab('') +
scale_fill_viridis(begin=1, end=0) +
theme_bw() +
ggtitle(
expression(
atop("Where Do Complaints Occur (Staten Island)",
atop("EXPLORING THE FREQUENCY OF COMPLAINTS GEOGRAPHICALLY", ""))
)
) +
my_theme
manhattan <- df[df$Borough == 'MANHATTAN',]
ny_plot <- ggmap(get_map('New York City', zoom=11, maptype='terrain'))
ny_stat_density <- stat_density2d(data=manhattan, aes(x = manhattan$Longitude, y = manhattan$Latitude, alpha=.6, fill=..level..), bins = 10, geom = 'polygon', na.rm=TRUE)
ny_plot +
ny_stat_density +
guides(fill = guide_colorbar(barwidth = 2, barheight = 12)) +
scale_alpha(range = c(0, 0.5), guide = FALSE) +
xlab('') +
ylab('') +
scale_fill_viridis(begin=1, end=0) +
theme_bw() +
ggtitle(
expression(
atop("Where Do Complaints Occur (Manhattan)",
atop("EXPLORING THE FREQUENCY OF COMPLAINTS GEOGRAPHICALLY", ""))
)
) +
my_theme
queens <- df[df$Borough == 'BROOKLYN',]
ny_plot <- ggmap(get_map('New York City', zoom=11, maptype='terrain'))
ny_stat_density <- stat_density2d(data=queens, aes(x = queens$Longitude, y = queens$Latitude, alpha=.6, fill=..level..), bins = 10, geom = 'polygon', na.rm=TRUE)
ny_plot +
ny_stat_density +
guides(fill = guide_colorbar(barwidth = 2, barheight = 12)) +
scale_alpha(range = c(0, 0.5), guide = FALSE) +
xlab('') +
ylab('') +
scale_fill_viridis(begin=1, end=0) +
theme_bw() +
ggtitle(
expression(
atop("Where Do Complaints Occur (Queens)",
atop("EXPLORING THE FREQUENCY OF COMPLAINTS GEOGRAPHICALLY", ""))
)
) +
my_theme
ny_plot <- ggmap(get_map('New York City', zoom=11, maptype='terrain'))
ny_stat_density <- stat_density2d(data=df, aes(x = df$Longitude, y = df$Latitude, alpha=.6, fill=..level..), bins = 10, geom = 'polygon', na.rm=TRUE)
ny_plot +
ny_stat_density +
guides(fill = guide_colorbar(barwidth = 2, barheight = 12)) +
scale_alpha(range = c(0, 0.5), guide = FALSE) +
xlab('') +
ylab('') +
scale_fill_viridis(begin=1, end=0) +
theme_bw() +
ggtitle(
expression(
atop("Where Do Complaints Occur (NYC)",
atop("EXPLORING THE FREQUENCY OF COMPLAINTS GEOGRAPHICALLY", ""))
)
) +
my_theme
bronx <- df[df$Borough == 'BRONX',]
ny_plot <- ggmap(get_map('New York City', zoom=11, maptype='terrain'))
ny_stat_density <- stat_density2d(data=bronx, aes(x = bronx$Longitude, y = bronx$Latitude, alpha=.6, fill=..level..), bins = 10, geom = 'polygon', na.rm=TRUE)
ny_plot +
ny_stat_density +
guides(fill = guide_colorbar(barwidth = 2, barheight = 12)) +
scale_alpha(range = c(0, 0.5), guide = FALSE) +
xlab('') +
ylab('') +
scale_fill_viridis(begin=1, end=0) +
theme_bw() +
ggtitle(
expression(
atop("Where Do Complaints Occur (Bronx)",
atop("EXPLORING THE FREQUENCY OF COMPLAINTS GEOGRAPHICALLY", ""))
)
) +
my_theme
brooklyn <- df[df$Borough == 'BROOKLYN',]
ny_plot <- ggmap(get_map('New York City', zoom=11, maptype='terrain'))
ny_stat_density <- stat_density2d(data=brooklyn, aes(x = brooklyn$Longitude, y = brooklyn$Latitude, alpha=.6, fill=..level..), bins = 10, geom = 'polygon', na.rm=TRUE)
ny_plot +
ny_stat_density +
guides(fill = guide_colorbar(barwidth = 2, barheight = 12)) +
scale_alpha(range = c(0, 0.5), guide = FALSE) +
xlab('') +
ylab('') +
scale_fill_viridis(begin=1, end=0) +
theme_bw() +
ggtitle(
expression(
atop("Where Do Complaints Occur (Brooklyn)",
atop("EXPLORING THE FREQUENCY OF COMPLAINTS GEOGRAPHICALLY", ""))
)
) +
my_theme
library(ggplot2)
library(ggmap)
library(scales)
library(viridis)
df <- read.csv("../data/311_feb.csv")
# get top 15 complaints
w = table(df$Complaint.Type)
t = as.data.frame(w)
names(t)[1] = 'Complaint.Type'
ct <- head(t[order(t$Freq, decreasing = TRUE),c(1,2)], 15)$Complaint.Type
df_complaints <- df[df$Complaint.Type %in% ct,]
# Select only Borough and Complaint.Type columns
# Reorganzie the data frame and make Borough into indvidual columns.
df_select <- select(df_complaints, Borough, Longitude, Latitude)
library(dplyr)
# get top 15 complaints
w = table(df$Complaint.Type)
t = as.data.frame(w)
names(t)[1] = 'Complaint.Type'
ct <- head(t[order(t$Freq, decreasing = TRUE),c(1,2)], 15)$Complaint.Type
df_complaints <- df[df$Complaint.Type %in% ct,]
# Select only Borough and Complaint.Type columns
# Reorganzie the data frame and make Borough into indvidual columns.
df_select <- select(df_complaints, Borough, Longitude, Latitude)
df_select$Borough <- chartr(" ", ".", df_select$Borough) # "Staten Island" should be "Staten.Island"
df_select
# get top 15 complaints
w = table(df$Complaint.Type)
t = as.data.frame(w)
names(t)[1] = 'Complaint.Type'
ct <- head(t[order(t$Freq, decreasing = TRUE),c(1,2)], 15)$Complaint.Type
df_complaints <- df[df$Complaint.Type %in% ct,]
# Select only Borough and Complaint.Type columns
# Reorganzie the data frame and make Borough into indvidual columns.
df_select <- select(df_complaints, Borough, Longitude, Latitude)
df_select$Borough <- chartr(" ", ".", df_select$Borough) # "Staten Island" should be "Staten.Island"
# save the csv
write.csv(df_select, row.names=F, file = "311_boroughs_where.csv")
shiny::runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
rsconnect::deployApp('/Users/olehdubno/Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
runApp('Documents/columbia/NYC311Project/nyc311app')
